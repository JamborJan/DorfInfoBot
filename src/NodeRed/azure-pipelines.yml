# # # # # # # # # # # # # # # # # # # # # # # # # #
#
# Content: build pipeline for custom node-red image
# Author: Jan Jambor, XWare GmbH
# Author URI: https://xwr.ch
#
# # # # # # # # # # # # # # # # # # # # # # # # # #

parameters:
- name: stage
  displayName: Stage
  type: string
  default: Build
  values:
  - Build

trigger:
- none

resources:
- repo: self

variables:
  - group: k8s_setup
  - name: dockerRegistryServiceConnection
    value: 'jjscontainers'
  - name: imageRepository
    value: 'dib-nodered'
  - name: containerRegistry
    value: 'jjscontainers.azurecr.io'
  - name: dockerfilePath
    value: '$(Build.SourcesDirectory)/src/NodeRed/Dockerfile'
  - name: tag
    value: '3.0.2-16'
  - name: vmImageName
    value: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build a new Docker image
  condition: eq('${{ parameters.stage }}', 'Build')
  jobs:
  
  - job: Build
    displayName: Build a new Docker image
    pool:
      vmImage: $(vmImageName)
    steps:

    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        repository: $(imageRepository)
        containerRegistry: $(dockerRegistryServiceConnection)
        dockerfile: $(dockerfilePath)
        tags: $(tag)
        arguments: '--build-arg BUILD_TAG=$(tag)'

    - task: Docker@2
      displayName: Push an image to container registry
      inputs:
        command: push
        repository: $(imageRepository)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: $(tag)

    # Login to cluster
    - script: |
        az login --service-principal --username $(k8s_client_id) --password $(k8s_client_secret) --tenant $(k8s_tenant_id)
      displayName: 'Login to Azure with Service Principal'
    - script: |
        az aks get-credentials --resource-group TST-rg-k8s-kstjj-001 --name k8s --overwrite-existing
      displayName: 'Get cluster info'
    
    # Apply new image version to application
    - script: |
        kubectl set image deployments/nodered nodered=jjscontainers.azurecr.io/$(imageRepository):$(tag) -n ns-dieriker-info
      displayName: 'Update k8s application in place'
